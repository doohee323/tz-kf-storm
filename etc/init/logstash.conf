#!upstart
description "logstash"
author      "Dewey Hong"

# used to be: start on startup
# until we found some mounts weren't ready yet while booting:
start on runlevel [2345]
stop on runlevel [016]

# Automatically Respawn:
#respawn
#respawn limit 99 5

#modify limits
limit nofile 64000 64000

env PROJ_NAME=logstash
env TARGET_APP=tz-storm
env HOME="/home/vagrant"

script
    ulimit -n 65000
    # Not sure why $HOME is needed, but it is:
    
    set -x
	echo "============ restart process !!!! ============" >> $HOME/logstash-1.5.3/logs/service.log
	echo $HOME/logstash-1.5.3/bin/logstash -f $HOME/logstash-1.5.3/log_list/$TARGET_APP.conf & >> $HOME/logstash-1.5.3/logs/service.log
	exec $HOME/logstash-1.5.3/bin/logstash -f $HOME/logstash-1.5.3/log_list/$TARGET_APP.conf > $HOME/logstash-1.5.3/logs/$PROJ_NAME.log & 2>&1
    set +x
end script

post-start script
    PID=`ps -ef | grep $PROJ_NAME | egrep -v 'grep|nohup' | awk '{print $2}'`
    echo $PID > $HOME/logstash-1.5.3/$PROJ_NAME.pid
end script

pre-start script
	if [ -f $HOME/logstash-1.5.3/$PROJ_NAME.pid] ; then
        rm $HOME/logstash-1.5.3/$PROJ_NAME.pid
    fi
    # Date format same as (new Date()).toISOString() for consistency
    echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Starting" >> $HOME/logstash-1.5.3/logs/$PROJ_NAME.log
end script

pre-stop script
    if [ -f $HOME/logstash-1.5.3/$PROJ_NAME.pid] ; then
        rm $HOME/logstash-1.5.3/$PROJ_NAME.pid
    fi
    echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Stopping" >> $HOME/logstash-1.5.3/logs/$PROJ_NAME.log
end script

